{"version":3,"sources":["components/pagination/Pagination.js","views/HomePage.js"],"names":["Pagination","query","useState","page","total_pages","RenderPage","lazy","HomePage","useRouteMatch","url","movies","setmovies","pagmov","setpagmov","useEffect","fetcMovies","then","results","console","log","catch","error","PageHeader","text","fallback"],"mappings":"yOAGe,SAASA,EAAT,GAA8B,IAATC,EAAQ,EAARA,MAEhC,EAAwBC,mBAAS,GAAjC,mBACA,GADA,UAC0BA,mBAAS,KAAnC,6BAKJ,OACI,mCACCD,GAAa,gCAEV,qFAAgBA,EAAME,QAE1B,gFAAgBF,EAAMG,oBCV1B,IAAMC,EAAaC,gBAAK,kBAAM,gCAEf,SAASC,IACtB,MAA0BL,mBAAS,MAAnC,mBAGE,GAHF,UAEkBM,cAARC,IACoBP,mBAAS,OAArC,mBAAOQ,EAAP,KAAeC,EAAf,KACD,EAA2BT,mBAAS,MAApC,mBAAMU,EAAN,KAAcC,EAAd,KAiBC,OAhBAC,qBAAU,WAERC,MACIC,MAAK,SAAAN,GACPG,EAAUH,GACVC,EAAUD,EAAOO,SACjBC,QAAQC,IAAIT,EAAOO,YAIjBG,OAAM,SAAAC,GACNH,QAAQC,IAAIE,QAGhB,IAGE,qCAEA,cAACC,EAAA,EAAD,CAAYC,KAAK,SACjB,cAAC,WAAD,CAAUC,SAAU,4CAApB,SACD,cAACnB,EAAD,CAAYK,OAAQA,MAEnBA,GAAW,cAACV,EAAD,CAAYC,MAAOW","file":"static/js/6.54e70593.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Pagination({query}) {\r\n    \r\n    const [page, setpage] = useState(1);\r\n    const [pages, setpages] = useState('');\r\n\r\n    // setpage(query.page)\r\n    // setpages(query.total_pages)\r\n\r\nreturn (\r\n    <>\r\n    {query &&     <div>\r\n        \r\n        <span>Страница:{query.page}</span>\r\n\r\n    <span>Страниц: {query.total_pages}</span>\r\n     </div>}\r\n     </>\r\n)\r\n}\r\n","import { useState, useEffect, lazy, Suspense} from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport * as fetcMovies from '../servises/MovieAPI';\r\nimport PageHeader from '../components/pageHeader/PageHeader';\r\nimport Pagination from '../components/pagination/Pagination';\r\n\r\n\r\nconst RenderPage = lazy(() => import('./RenderPage'));\r\n\r\nexport default function HomePage() {\r\n  const [movie, setmovie] = useState(null);\r\n \r\n    const { url } = useRouteMatch();//для проверки совпадения адреса в аресной строке\r\n    const [movies, setmovies] = useState(null);\r\n   const[pagmov, setpagmov] = useState(null)\r\n    useEffect(()=>{\r\n  \r\n      fetcMovies.fetchHomeMovies()\r\n         .then(movies => {\r\n        setpagmov(movies)\r\n        setmovies(movies.results);\r\n        console.log(movies.results);\r\n        // console.log(movies.results[2].poster_path)\r\n       \r\n      })\r\n         .catch(error => {\r\n          console.log(error);\r\n      });\r\n  \r\n    },[])\r\n\r\n    return(\r\n        <>\r\n        \r\n        <PageHeader text=\"Home\" />\r\n        <Suspense fallback={<h1>Waiting...</h1>}>\r\n       <RenderPage movies={movies}/>\r\n        </Suspense>\r\n       {movies &&  <Pagination query={pagmov} />}\r\n      </>\r\n    )\r\n}"],"sourceRoot":""}