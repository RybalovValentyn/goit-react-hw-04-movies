{"ast":null,"code":"var _jsxFileName = \"F:\\\\goit-react-hw-04-movies\\\\src\\\\views\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, lazy, Suspense } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport * as fetcMovies from '../servises/MovieAPI';\nimport PageHeader from '../components/pageHeader/PageHeader';\nimport RenderPage from './RenderPage';\nimport Pagination from '../components/pagination/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableView = /*#__PURE__*/lazy(_c = () => import('./views/TableView'));\n_c2 = TableView;\nexport default function HomePage() {\n  _s();\n\n  const {\n    url\n  } = useRouteMatch(); //для проверки совпадения адреса в аресной строке\n\n  const [movies, setmovies] = useState(null);\n  const [pagmov, setpagmov] = useState(null);\n  useEffect(() => {\n    fetcMovies.fetchHomeMovies().then(movies => {\n      setpagmov(movies);\n      setmovies(movies.results);\n      console.log(movies.results); // console.log(movies.results[2].poster_path)\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      text: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RenderPage, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this), movies && /*#__PURE__*/_jsxDEV(Pagination, {\n      query: pagmov\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HomePage, \"D2BBv2icwTFUs/mFhS26kU6Oq78=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c3 = HomePage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TableView$lazy\");\n$RefreshReg$(_c2, \"TableView\");\n$RefreshReg$(_c3, \"HomePage\");","map":{"version":3,"sources":["F:/goit-react-hw-04-movies/src/views/HomePage.js"],"names":["useState","useEffect","lazy","Suspense","Link","useRouteMatch","fetcMovies","PageHeader","RenderPage","Pagination","TableView","HomePage","url","movies","setmovies","pagmov","setpagmov","fetchHomeMovies","then","results","console","log","catch","error"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,IAA9B,EAAoCC,QAApC,QAAmD,OAAnD;AAEA,SAASC,IAAT,EAAeC,aAAf,QAAoC,kBAApC;AACA,OAAO,KAAKC,UAAZ,MAA4B,sBAA5B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;;AACA,MAAMC,SAAS,gBAAGR,IAAI,MAAC,MAAM,OAAO,mBAAP,CAAP,CAAtB;MAAMQ,S;AAEN,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAUP,aAAa,EAA7B,CAD+B,CACC;;AAChC,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,IAAD,CAApC;AACD,QAAK,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,IAAD,CAAnC;AACCC,EAAAA,SAAS,CAAC,MAAI;AAEZK,IAAAA,UAAU,CAACW,eAAX,GACIC,IADJ,CACSL,MAAM,IAAI;AACjBG,MAAAA,SAAS,CAACH,MAAD,CAAT;AACAC,MAAAA,SAAS,CAACD,MAAM,CAACM,OAAR,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACM,OAAnB,EAHiB,CAIjB;AAED,KAPD,EAQIG,KARJ,CAQUC,KAAK,IAAI;AACfH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KAVD;AAYD,GAdQ,EAcP,EAdO,CAAT;AAgBA,sBACI;AAAA,4BAEA,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFA,eAID,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEV;AAApB;AAAA;AAAA;AAAA;AAAA,YAJC,EAMAA,MAAM,iBAAK,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA,YANX;AAAA,kBADJ;AAUH;;GA9BuBJ,Q;UACJN,a;;;MADIM,Q","sourcesContent":["import { useState, useEffect, lazy, Suspense} from 'react';\r\n\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport * as fetcMovies from '../servises/MovieAPI';\r\nimport PageHeader from '../components/pageHeader/PageHeader';\r\nimport RenderPage from './RenderPage';\r\nimport Pagination from '../components/pagination/Pagination';\r\nconst TableView = lazy(() => import('./views/TableView'));\r\n\r\nexport default function HomePage() {\r\n    const { url } = useRouteMatch();//для проверки совпадения адреса в аресной строке\r\n    const [movies, setmovies] = useState(null);\r\n   const[pagmov, setpagmov] = useState(null)\r\n    useEffect(()=>{\r\n  \r\n      fetcMovies.fetchHomeMovies()\r\n         .then(movies => {\r\n        setpagmov(movies)\r\n        setmovies(movies.results);\r\n        console.log(movies.results);\r\n        // console.log(movies.results[2].poster_path)\r\n       \r\n      })\r\n         .catch(error => {\r\n          console.log(error);\r\n      });\r\n  \r\n    },[])\r\n\r\n    return(\r\n        <>\r\n        \r\n        <PageHeader text=\"Home\" />\r\n       \r\n       <RenderPage movies={movies}/>\r\n\r\n       {movies &&  <Pagination query={pagmov} />}\r\n      </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}