{"ast":null,"code":"var _jsxFileName = \"F:\\\\goit-react-hw-04-movies\\\\src\\\\views\\\\MovieDetailsView.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PageHeader from '../components/pageHeader/PageHeader';\nimport * as fetcMovies from '../servises/MovieAPI';\nimport s from './views.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieDetailsView() {\n  _s();\n\n  const {\n    movieId\n  } = useParams(); //отслеживает динамические параметри useParams\n\n  const [movie, setmovie] = useState(null);\n  console.log(movieId);\n  useEffect(() => {\n    fetcMovies.fetchMuvieById(movieId).then(movie => {\n      setmovie(movie);\n      console.log(movie); // console.log(movies.results[2].poster_path)\n    });\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [movie && /*#__PURE__*/_jsxDEV(PageHeader, {\n      className: s.headerDetails,\n      text: `${movie.original_title}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this), movie && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: s.detailImage,\n          src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n          alt: movie.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MovieDetailsView, \"Q/DZsqqVYKWzS4WFpQdvxGfHIts=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetailsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetailsView\");","map":{"version":3,"sources":["F:/goit-react-hw-04-movies/src/views/MovieDetailsView.js"],"names":["useState","useEffect","useParams","PageHeader","fetcMovies","s","MovieDetailsView","movieId","movie","setmovie","console","log","fetchMuvieById","then","headerDetails","original_title","detailImage","poster_path"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAO,KAAKC,UAAZ,MAA4B,sBAA5B;AACA,OAAOC,CAAP,MAAc,oBAAd;;;AACA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC,QAAM;AAACC,IAAAA;AAAD,MAAaL,SAAS,EAA5B,CADyC,CACV;;AAC/B,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEFU,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACEN,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,UAAU,CAACQ,cAAX,CAA0BL,OAA1B,EAAmCM,IAAnC,CAAwCL,KAAK,IAAI;AAC7CC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAF6C,CAG7C;AAED,KALH;AAMD,GAPQ,EAON,CAACD,OAAD,CAPM,CAAT;AASA,sBACE;AAAA,eAEEC,KAAK,iBAAI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEH,CAAC,CAACS,aAAzB;AAAwC,MAAA,IAAI,EAAG,GAAEN,KAAK,CAACO,cAAe;AAAtE;AAAA;AAAA;AAAA;AAAA,YAFX,EAIGP,KAAK,iBACJ;AAAA,6BACI;AAAA,+BACF;AAAK,UAAA,SAAS,EAAEH,CAAC,CAACW,WAAlB;AAA+B,UAAA,GAAG,EAAG,kCAAiCR,KAAK,CAACS,WAAY,EAAxF;AAA2F,UAAA,GAAG,EAAET,KAAK,CAACO;AAAtG;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADF;AAiBD;;GA/BuBT,gB;UACHJ,S;;;KADGI,gB","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PageHeader from '../components/pageHeader/PageHeader';\r\nimport * as fetcMovies from '../servises/MovieAPI';\r\nimport s from './views.module.css'\r\nexport default function MovieDetailsView() {\r\n  const {movieId } = useParams();//отслеживает динамические параметри useParams\r\n  const [movie, setmovie] = useState(null);\r\n  \r\nconsole.log(movieId);\r\n  useEffect(() => {\r\n    fetcMovies.fetchMuvieById(movieId).then(movie => {\r\n        setmovie(movie);\r\n        console.log(movie);\r\n        // console.log(movies.results[2].poster_path)\r\n       \r\n      });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n\r\n     {movie && <PageHeader className={s.headerDetails} text={`${movie.original_title}`} />\r\n}\r\n      {movie && (\r\n        <div>\r\n            <div>\r\n          <img className={s.detailImage} src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.original_title} />\r\n          </div>\r\n          {/* <h2>{movie.title}</h2> */}\r\n          {/* <p>Автор: {movie.author.name}</p> */}\r\n          {/* <p>{movie.descr}</p> */}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}