{"ast":null,"code":"var _jsxFileName = \"F:\\\\goit-react-hw-04-movies\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport fetcMovies from './servises/MovieAPI';\nimport { useState, useEffect } from 'react';\nimport s from './app.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movies, setmovies] = useState([]);\n  const [name, setname] = useState('');\n  useEffect(() => {\n    fetcMovies().then(movies => {\n      setmovies(movies.results);\n      console.log(movies.results[2]);\n      console.log(movies.results[2].poster_path);\n      render(movies);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [name]);\n\n  const handleChange = event => {\n    setname(event.target.value);\n    console.log(movies[2].poster_path);\n  };\n\n  const render = movies => {\n    if (movies) {\n      console.log(movies[2].poster_path);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500${movies[2].poster_path}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 8\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: s.container //  onSubmit={handleSubmit}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: s.labelInpt,\n        children: [\"name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          value: name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.submitBtn,\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"render\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xGTPRJxg3xy38OLjbyMtqzssgzQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/goit-react-hw-04-movies/src/App.js"],"names":["fetcMovies","useState","useEffect","s","App","movies","setmovies","name","setname","then","results","console","log","poster_path","render","catch","error","handleChange","event","target","value","container","labelInpt","input","submitBtn"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,qBAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,CAAP,MAAc,kBAAd;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAgBP,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AAEZF,IAAAA,UAAU,GACNS,IADJ,CACSJ,MAAM,IAAI;AACjBC,MAAAA,SAAS,CAACD,MAAM,CAACK,OAAR,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACK,OAAP,CAAe,CAAf,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACK,OAAP,CAAe,CAAf,EAAkBG,WAA9B;AACAC,MAAAA,MAAM,CAACT,MAAD,CAAN;AACD,KAND,EAOIU,KAPJ,CAOUC,KAAK,IAAI;AACfL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,KATD;AAWD,GAbQ,EAaP,CAACT,IAAD,CAbO,CAAT;;AAeA,QAAMU,YAAY,GAAGC,KAAK,IAAI;AAC3BV,IAAAA,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAAC,CAAD,CAAN,CAAUQ,WAAtB;AACF,GAHD;;AAKF,QAAMC,MAAM,GAAIT,MAAD,IAAW;AACxB,QAAIA,MAAJ,EAAY;AACVM,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAAC,CAAD,CAAN,CAAUQ,WAAtB;AACA,0BACG;AAAA,+BACF;AAAK,UAAA,GAAG,EAAG,kCAAiCR,MAAM,CAAC,CAAD,CAAN,CAAUQ,WAAY;AAAlE;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,cADH;AAKD;AAEF,GAVD;;AAWE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAM,MAAA,SAAS,EAAEV,CAAC,CAACkB,SAAnB,CACA;AADA;AAAA,8BAIA;AAAO,QAAA,SAAS,EAAElB,CAAC,CAACmB,SAApB;AAAA,wCACR;AAAO,UAAA,SAAS,EAAEnB,CAAC,CAACoB,KAApB;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,OAAO,EAAC,wHAHV;AAIE,UAAA,KAAK,EAAC,icAJR;AAKE,UAAA,QAAQ,MALV;AAME,UAAA,KAAK,EAAEhB,IANT;AAOE,UAAA,QAAQ,EAAEU;AAPZ;AAAA;AAAA;AAAA;AAAA,gBADQ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAgBR;AAAQ,QAAA,SAAS,EAAEd,CAAC,CAACqB,SAArB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBQ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAoBJ;AAAA;AAAA;AAAA;AAAA,YApBI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA5DQpB,G;;KAAAA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import fetcMovies from './servises/MovieAPI'\nimport { useState, useEffect } from 'react';\nimport s from './app.module.css'\nfunction App() {\n\n  const [movies, setmovies] = useState([]);\n  const [name, setname]=useState('')\n\n  useEffect(()=>{\n\n    fetcMovies()\n       .then(movies => {\n      setmovies(movies.results);\n      console.log(movies.results[2]);\n      console.log(movies.results[2].poster_path)\n      render(movies)\n    })\n       .catch(error => {\n        console.log(error);\n    });\n\n  },[name])\n  \n  const handleChange = event => {\n     setname(event.target.value)\n     console.log(movies[2].poster_path)\n  }\n\nconst render = (movies) =>{\n  if (movies) {\n    console.log(movies[2].poster_path);\n    return(\n       <div>\n     <img src={`https://image.tmdb.org/t/p/w500${movies[2].poster_path}`} />\n     {/* <img src={`https://image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg`} /> */}\n     </div>)\n  }\n  \n}\n  return (\n    <div className=\"App\">\n        <form className={s.container}\n        //  onSubmit={handleSubmit}\n          >\n\n        <label className={s.labelInpt} >name\n<input className={s.input}\n  type=\"text\"\n  name=\"name\"\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n  required\n  value={name}\n  onChange={handleChange}\n/></label>\n\n\n<button className={s.submitBtn} type='submit' >Add contact</button>\n</form>\n\n<render/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}