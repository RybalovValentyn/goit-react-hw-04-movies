{"ast":null,"code":"var _jsxFileName = \"F:\\\\goit-react-hw-04-movies\\\\src\\\\views\\\\MovieDetailsView.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PageHeader from '../components/pageHeader/PageHeader';\nimport * as bookShelfAPI from '../services/bookshelf-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BookDetailsView() {\n  _s();\n\n  const {\n    movieId\n  } = useParams(); //отслеживает динамические параметри useParams\n\n  const [movie, setmovie] = useState(null);\n  useEffect(() => {\n    fetcMovies.fetchMuvieById(movieId).then(movies => {\n      setmovies(movies.results);\n      console.log(movies.results); // console.log(movies.results[2].poster_path)\n    });\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      text: `Muvie ${bookId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), movie && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}\n\n_s(BookDetailsView, \"Q/DZsqqVYKWzS4WFpQdvxGfHIts=\", false, function () {\n  return [useParams];\n});\n\n_c = BookDetailsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookDetailsView\");","map":{"version":3,"sources":["F:/goit-react-hw-04-movies/src/views/MovieDetailsView.js"],"names":["useState","useEffect","useParams","PageHeader","bookShelfAPI","BookDetailsView","movieId","movie","setmovie","fetcMovies","fetchMuvieById","then","movies","setmovies","results","console","log","bookId","title"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAO,KAAKC,YAAZ,MAA8B,2BAA9B;;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAM;AAACC,IAAAA;AAAD,MAAaJ,SAAS,EAA5B,CADwC,CACT;;AAC/B,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAACC,cAAX,CAA0BJ,OAA1B,EAAmCK,IAAnC,CAAwCC,MAAM,IAAI;AAC9CC,MAAAA,SAAS,CAACD,MAAM,CAACE,OAAR,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB,EAF8C,CAG9C;AAED,KALH;AAMD,GAPQ,EAON,CAACR,OAAD,CAPM,CAAT;AASA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAG,SAAQW,MAAO;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,EAGGV,KAAK,iBACJ;AAAA,6BAEE;AAAA,kBAAKA,KAAK,CAACW;AAAX;AAAA;AAAA;AAAA;AAAA;AAFF,qBAJJ;AAAA,kBADF;AAcD;;GA3BuBb,e;UACHH,S;;;KADGG,e","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PageHeader from '../components/pageHeader/PageHeader';\r\nimport * as bookShelfAPI from '../services/bookshelf-api';\r\n\r\nexport default function BookDetailsView() {\r\n  const {movieId } = useParams();//отслеживает динамические параметри useParams\r\n  const [movie, setmovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetcMovies.fetchMuvieById(movieId).then(movies => {\r\n        setmovies(movies.results);\r\n        console.log(movies.results);\r\n        // console.log(movies.results[2].poster_path)\r\n       \r\n      });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <PageHeader text={`Muvie ${bookId}`} />\r\n\r\n      {movie && (\r\n        <>\r\n          {/* <img src={movie.imgUrl} alt={movie.title} /> */}\r\n          <h2>{movie.title}</h2>\r\n          {/* <p>Автор: {movie.author.name}</p> */}\r\n          {/* <p>{movie.descr}</p> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}