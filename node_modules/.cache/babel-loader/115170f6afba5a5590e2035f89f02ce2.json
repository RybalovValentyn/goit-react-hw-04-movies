{"ast":null,"code":"var _jsxFileName = \"F:\\\\goit-react-hw-04-movies\\\\src\\\\views\\\\MovieDetailsView.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // import PageHeading from '../components/PageHeading/PageHeading';\n\nimport * as bookShelfAPI from '../services/bookshelf-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BookDetailsView() {\n  _s();\n\n  const {\n    bookId\n  } = useParams(); //отслеживает динамические параметри useParams\n\n  const [book, setBook] = useState(null);\n  useEffect(() => {\n    bookShelfAPI.fetchBookById(bookId).then(setBook);\n  }, [bookId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeading, {\n      text: `Книга ${bookId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), book && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: book.imgUrl,\n        alt: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0410\\u0432\\u0442\\u043E\\u0440: \", book.author.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: book.descr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(BookDetailsView, \"wt5/xnBLNbnFllOaX+Cl2UYrNYE=\", false, function () {\n  return [useParams];\n});\n\n_c = BookDetailsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookDetailsView\");","map":{"version":3,"sources":["F:/goit-react-hw-04-movies/src/views/MovieDetailsView.js"],"names":["useState","useEffect","useParams","bookShelfAPI","BookDetailsView","bookId","book","setBook","fetchBookById","then","imgUrl","title","author","name","descr"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;AACA,OAAO,KAAKC,YAAZ,MAA8B,2BAA9B;;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAaH,SAAS,EAA5B,CADwC,CACT;;AAC/B,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,YAAY,CAACK,aAAb,CAA2BH,MAA3B,EAAmCI,IAAnC,CAAwCF,OAAxC;AACD,GAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAG,SAAQA,MAAO;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,EAGGC,IAAI,iBACH;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACI,MAAf;AAAuB,QAAA,GAAG,EAAEJ,IAAI,CAACK;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKL,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,uDAAWL,IAAI,CAACM,MAAL,CAAYC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAIP,IAAI,CAACQ;AAAT;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBAJJ;AAAA,kBADF;AAcD;;GAtBuBV,e;UACHF,S;;;KADGE,e","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n// import PageHeading from '../components/PageHeading/PageHeading';\r\nimport * as bookShelfAPI from '../services/bookshelf-api';\r\n\r\nexport default function BookDetailsView() {\r\n  const { bookId } = useParams();//отслеживает динамические параметри useParams\r\n  const [book, setBook] = useState(null);\r\n\r\n  useEffect(() => {\r\n    bookShelfAPI.fetchBookById(bookId).then(setBook);\r\n  }, [bookId]);\r\n\r\n  return (\r\n    <>\r\n      <PageHeading text={`Книга ${bookId}`} />\r\n\r\n      {book && (\r\n        <>\r\n          <img src={book.imgUrl} alt={book.title} />\r\n          <h2>{book.title}</h2>\r\n          <p>Автор: {book.author.name}</p>\r\n          <p>{book.descr}</p>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}