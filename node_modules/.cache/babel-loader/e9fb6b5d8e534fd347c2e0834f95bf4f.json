{"ast":null,"code":"var _jsxFileName = \"F:\\\\goit-react-hw-04-movies\\\\src\\\\views\\\\Cast.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as fetcMovies from '../servises/MovieAPI';\nimport s from './views.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CastViews() {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [views, setviews] = useState(null);\n  useEffect(() => {\n    fetcMovies.fetchMuvieViews(movieId).then(view => {\n      setviews(view.results);\n      console.log(view.results);\n    });\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: views && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: views.map(view => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: view.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 12\n        }, this), view.author_details.avatar_path && /*#__PURE__*/_jsxDEV(\"picture\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: view.author_details.avatar_path.slice(1, view.author_details.avatar_path.length),\n            alt: \"\\u0424\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 14\n        }, this)]\n      }, view.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\n_s(CastViews, \"Ppm7Zq9dFAgx8b8gqxJRpL5i7Uk=\", false, function () {\n  return [useParams];\n});\n\n_c = CastViews;\n{\n  /* <h2>{author.name}</h2>\r\n   <ul>\r\n   {author.books.map(book => (\r\n     <li key={book.id}>\r\n       <Link to={`/books/${book.id}`}>{book.title}</Link>\r\n     </li>\r\n   ))}\r\n  </ul> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CastViews\");","map":{"version":3,"sources":["F:/goit-react-hw-04-movies/src/views/Cast.js"],"names":["useParams","Link","useState","useEffect","fetcMovies","s","CastViews","movieId","views","setviews","fetchMuvieViews","then","view","results","console","log","map","author","author_details","avatar_path","slice","length","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AAEA,OAAO,KAAKC,UAAZ,MAA4B,sBAA5B;AACA,OAAOC,CAAP,MAAc,oBAAd;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM;AAACC,IAAAA;AAAD,MAAaP,SAAS,EAA5B;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEFC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,UAAU,CAACM,eAAX,CAA2BH,OAA3B,EAAoCI,IAApC,CAAyCC,IAAI,IAAI;AAC7CH,MAAAA,QAAQ,CAACG,IAAI,CAACC,OAAN,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,OAAjB;AACD,KAHH;AAID,GALQ,EAKN,CAACN,OAAD,CALM,CAAT;AAMA,sBACE;AAAA,cACHC,KAAK,iBACH;AAAA,gBACMA,KAAK,CAACQ,GAAN,CAAUJ,IAAI,iBACb;AAAA,gCACC;AAAA,oBAAIA,IAAI,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,gBADD,EAEGL,IAAI,CAACM,cAAL,CAAoBC,WAApB,iBACA;AAAA,iCAEI;AAAK,YAAA,GAAG,EAAEP,IAAI,CAACM,cAAL,CAAoBC,WAApB,CAAgCC,KAAhC,CAAsC,CAAtC,EAAyCR,IAAI,CAACM,cAAL,CAAoBC,WAArB,CAAkCE,MAA1E,CAAV;AAA6F,YAAA,GAAG,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAHH;AAAA,SAAST,IAAI,CAACU,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADN;AAAA;AAAA;AAAA;AAAA;AAFC,mBADF;AAiBD;;GA3BuBhB,S;UACDN,S;;;KADCM,S;AA+BlB;AAAC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACe","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState, useEffect} from 'react';\r\n\r\nimport * as fetcMovies from '../servises/MovieAPI';\r\nimport s from './views.module.css'\r\n\r\nexport default function CastViews() {\r\n    const {movieId } = useParams();\r\n    const [views, setviews] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetcMovies.fetchMuvieViews(movieId).then(view => {\r\n        setviews(view.results);\r\n        console.log(view.results);             \r\n      });\r\n  }, [movieId]);\r\n  return (\r\n    <>\r\n{views &&  \r\n   <ul>\r\n        {views.map(view  => (\r\n          <li key={view.id}>\r\n           <p>{view.author}</p>\r\n            {view.author_details.avatar_path  &&    \r\n             <picture>\r\n              {/* <img srcset={`(https://image.tmdb.org/t/p/w500${view.author_details.avatar_path}`} type=\"image/webp\" /> */}\r\n                 <img src={view.author_details.avatar_path.slice(1,(view.author_details.avatar_path).length)} alt=\"Фотография\" />\r\n            </picture>}\r\n          </li>\r\n        ))}\r\n    </ul>}\r\n    </>\r\n  );\r\n}\r\n\r\n    \r\n  \r\n      {/* <h2>{author.name}</h2>\r\n\r\n      <ul>\r\n        {author.books.map(book => (\r\n          <li key={book.id}>\r\n            <Link to={`/books/${book.id}`}>{book.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul> */}"]},"metadata":{},"sourceType":"module"}