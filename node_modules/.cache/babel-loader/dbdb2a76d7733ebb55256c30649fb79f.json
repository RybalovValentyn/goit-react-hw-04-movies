{"ast":null,"code":"var _jsxFileName = \"F:\\\\goit-react-hw-04-movies\\\\src\\\\views\\\\Cast.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nim;\nexport default function CastViews() {\n  _s();\n\n  const {\n    movieId\n  } = useParams(); //отслеживает динамические параметри useParams\n\n  const [movie, setmovie] = useState(null);\n  console.log(movieId);\n  console.log(movieId);\n  useEffect(() => {\n    fetcMovies.fetchMuvieById(movieId).then(movie => {\n      setmovie(movie);\n      console.log(movie); // console.log(movies.results[2].poster_path)\n    });\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"lordddddddddddddddd \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(CastViews, \"Q/DZsqqVYKWzS4WFpQdvxGfHIts=\", false, function () {\n  return [useParams];\n});\n\n_c = CastViews;\n\nvar _c;\n\n$RefreshReg$(_c, \"CastViews\");","map":{"version":3,"sources":["F:/goit-react-hw-04-movies/src/views/Cast.js"],"names":["useParams","Link","useState","useEffect","im","CastViews","movieId","movie","setmovie","console","log","fetcMovies","fetchMuvieById","then"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AACAC,EAAE;AAEF,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM;AAACC,IAAAA;AAAD,MAAaN,SAAS,EAA5B,CADgC,CACD;;AAC/B,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACFH,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAACC,cAAX,CAA0BN,OAA1B,EAAmCO,IAAnC,CAAwCN,KAAK,IAAI;AAC7CC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAF6C,CAG7C;AAED,KALH;AAMD,GAPQ,EAON,CAACD,OAAD,CAPM,CAAT;AAQA,sBACE;AAAA,2BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAcD;;GA5BuBD,S;UACDL,S;;;KADCK,S","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState,} from 'react';\r\nimport { useEffect } from 'react';\r\nim\r\n\r\nexport default function CastViews() {\r\n    const {movieId } = useParams();//отслеживает динамические параметри useParams\r\n    const [movie, setmovie] = useState(null);\r\n    console.log(movieId);\r\n\r\n    console.log(movieId);\r\n  useEffect(() => {\r\n    fetcMovies.fetchMuvieById(movieId).then(movie => {\r\n        setmovie(movie);\r\n        console.log(movie);\r\n        // console.log(movies.results[2].poster_path)\r\n       \r\n      });\r\n  }, [movieId]);\r\n  return (\r\n    <>\r\n    <p>lordddddddddddddddd </p>\r\n      {/* <h2>{author.name}</h2>\r\n\r\n      <ul>\r\n        {author.books.map(book => (\r\n          <li key={book.id}>\r\n            <Link to={`/books/${book.id}`}>{book.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul> */}\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}