{"ast":null,"code":"var _jsxFileName = \"F:\\\\goit-react-hw-04-movies\\\\src\\\\views\\\\MovieDetailsView.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, lazy, Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PageHeader from '../components/pageHeader/PageHeader';\nimport * as fetcMovies from '../servises/MovieAPI';\nimport s from './views.module.css';\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieDetailsView() {\n  _s();\n\n  const {\n    movieId\n  } = useParams(); //отслеживает динамические параметри useParams\n\n  const [movie, setmovie] = useState(null);\n  console.log(movieId);\n  useEffect(() => {\n    fetcMovies.fetchMuvieById(movieId).then(movie => {\n      setmovie(movie);\n      console.log(movie); // console.log(movies.results[2].poster_path)\n    });\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [movie && /*#__PURE__*/_jsxDEV(PageHeader, {\n      className: s.headerDetails,\n      text: `${movie.original_title}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this), movie && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.detailContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: s.detailImage,\n          src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n          alt: movie.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: movie.genres.map(genre => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: s.genreItems,\n            children: [genre.name, \"  \"]\n          }, genre.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release date: \", movie.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Additional Information \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie.id}/cast`,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n            className: s.infoItem,\n            children: \"Cast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie.id}/reviews`,\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: s.infoItem,\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MovieDetailsView, \"Q/DZsqqVYKWzS4WFpQdvxGfHIts=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetailsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetailsView\");","map":{"version":3,"sources":["F:/goit-react-hw-04-movies/src/views/MovieDetailsView.js"],"names":["useState","useEffect","lazy","Suspense","useParams","PageHeader","fetcMovies","s","Link","Route","useRouteMatch","MovieDetailsView","movieId","movie","setmovie","console","log","fetchMuvieById","then","headerDetails","original_title","detailContainer","detailImage","poster_path","genres","map","genre","genreItems","name","id","overview","release_date","infoItem"],"mappings":"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","sourcesContent":["import { useState, useEffect,lazy, Suspense } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PageHeader from '../components/pageHeader/PageHeader';\r\nimport * as fetcMovies from '../servises/MovieAPI';\r\nimport s from './views.module.css'\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\n\r\nexport default function MovieDetailsView() {\r\n  const {movieId } = useParams();//отслеживает динамические параметри useParams\r\n  const [movie, setmovie] = useState(null);\r\n  \r\nconsole.log(movieId);\r\n  useEffect(() => {\r\n    fetcMovies.fetchMuvieById(movieId).then(movie => {\r\n        setmovie(movie);\r\n        console.log(movie);\r\n        // console.log(movies.results[2].poster_path)\r\n       \r\n      });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n\r\n     {movie && <PageHeader className={s.headerDetails} text={`${movie.original_title}`} />\r\n}\r\n      {movie && (\r\n        <div className={s.detailContainer}>\r\n            <div>\r\n          <img className={s.detailImage} src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.original_title} />\r\n          </div>\r\n          <div>\r\n            <h2>{movie.original_title}</h2>\r\n        <ul>\r\n                  {movie.genres.map(genre=>(\r\n        <li className={s.genreItems} key={genre.id}>{genre.name}  </li>\r\n                        ))}\r\n        </ul>\r\n            <h3>Overview</h3>\r\n            <p>{movie.overview}</p>\r\n            <p>Release date: {movie.release_date}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n         \r\n\r\n            <div>\r\n                <h3>Additional Information </h3>\r\n                <ul>\r\n                <Link to={`/movies/${movie.id}/cast`} > <li className={s.infoItem}>Cast</li></Link>\r\n\r\n                <Link to={`/movies/${movie.id}/reviews`}><li className={s.infoItem}>Reviews</li></Link>\r\n                </ul>\r\n\r\n            </div>\r\n        {/* <Suspense fallback={<h1>Waiting...</h1>}>\r\n             <Route path={`${path}/:authorId`}>\r\n             {authors && <MovieSubView authors={authors} />}\r\n            </Route> \r\n      </Suspense> */}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}