{"ast":null,"code":"var _jsxFileName = \"F:\\\\goit-react-hw-04-movies\\\\src\\\\views\\\\Cast.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport * as fetcMovies from '../servises/MovieAPI';\nimport s from './views.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CastViews() {\n  _s();\n\n  // const {movieId } = useParams();//отслеживает динамические параметри useParams\n  const [views, setviews] = useState(null);\n  const [movieId, setmovieId] = useState(movieId);\n  console.log(movieId);\n  useEffect(() => {\n    fetcMovies.fetchMuvieViews(movieId).then(view => {\n      setviews(view);\n      console.log(view);\n    });\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"lordddddddddddddddd \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(CastViews, \"hVI/7vcHacicj7nRmwasX3YpSe4=\");\n\n_c = CastViews;\n\nvar _c;\n\n$RefreshReg$(_c, \"CastViews\");","map":{"version":3,"sources":["F:/goit-react-hw-04-movies/src/views/Cast.js"],"names":["useParams","Link","useState","useEffect","fetcMovies","s","CastViews","views","setviews","movieId","setmovieId","console","log","fetchMuvieViews","then","view"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,KAAKC,UAAZ,MAA4B,sBAA5B;AACA,OAAOC,CAAP,MAAc,oBAAd;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAACO,OAAD,CAAtC;AAGAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACFN,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,UAAU,CAACS,eAAX,CAA2BJ,OAA3B,EAAoCK,IAApC,CAAyCC,IAAI,IAAI;AAC7CP,MAAAA,QAAQ,CAACO,IAAD,CAAR;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACD,KAHH;AAID,GALQ,EAKN,CAACN,OAAD,CALM,CAAT;AAMA,sBACE;AAAA,2BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAcD;;GA3BuBH,S;;KAAAA,S","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState,} from 'react';\r\nimport { useEffect } from 'react';\r\nimport * as fetcMovies from '../servises/MovieAPI';\r\nimport s from './views.module.css'\r\n\r\nexport default function CastViews() {\r\n    // const {movieId } = useParams();//отслеживает динамические параметри useParams\r\n    const [views, setviews] = useState(null);\r\n    const [movieId, setmovieId] = useState(movieId);\r\n\r\n\r\n    console.log(movieId);\r\n  useEffect(() => {\r\n    fetcMovies.fetchMuvieViews(movieId).then(view => {\r\n        setviews(view);\r\n        console.log(view);             \r\n      });\r\n  }, [movieId]);\r\n  return (\r\n    <>\r\n    <p>lordddddddddddddddd </p>\r\n      {/* <h2>{author.name}</h2>\r\n\r\n      <ul>\r\n        {author.books.map(book => (\r\n          <li key={book.id}>\r\n            <Link to={`/books/${book.id}`}>{book.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul> */}\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}