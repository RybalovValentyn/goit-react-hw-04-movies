{"ast":null,"code":"var _jsxFileName = \"F:\\\\goit-react-hw-04-movies\\\\src\\\\views\\\\Cast.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CastViews() {\n  _s();\n\n  const {\n    movieId\n  } = useParams(); //отслеживает динамические параметри useParams\n\n  const [movie, setmovie] = useState(null);\n  console.log(movieId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"lordddddddddddddddd \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(CastViews, \"bUGq1cC7LFwLhEf078E2ngYbU7I=\", false, function () {\n  return [useParams];\n});\n\n_c = CastViews;\n\nvar _c;\n\n$RefreshReg$(_c, \"CastViews\");","map":{"version":3,"sources":["F:/goit-react-hw-04-movies/src/views/Cast.js"],"names":["useParams","Link","useState","CastViews","movieId","movie","setmovie","console","log"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM;AAACC,IAAAA;AAAD,MAAaJ,SAAS,EAA5B,CADgC,CACD;;AAC/B,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACF,sBACE;AAAA,2BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAcD;;GAlBuBD,S;UACDH,S;;;KADCG,S","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState,} from 'react';\r\n\r\nexport default function CastViews() {\r\n    const {movieId } = useParams();//отслеживает динамические параметри useParams\r\n    const [movie, setmovie] = useState(null);\r\n    console.log(movieId);\r\n  return (\r\n    <>\r\n    <p>lordddddddddddddddd </p>\r\n      {/* <h2>{author.name}</h2>\r\n\r\n      <ul>\r\n        {author.books.map(book => (\r\n          <li key={book.id}>\r\n            <Link to={`/books/${book.id}`}>{book.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul> */}\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}