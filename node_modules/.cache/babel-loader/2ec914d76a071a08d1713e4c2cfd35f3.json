{"ast":null,"code":"// const BASE_URL = ' https://api.themoviedb.org/3/movie/550?api_key=';\nconst BASE_URL = ' https://api.themoviedb.org/3/movie/popular?api_key=';\nconst Key = 'e7d10f6c3b01c863e408d25d6d0fc59c';\nconst Config = {\n  language: 'en-US',\n  page: 1\n}; // function fetcMovies() {\n//     return fetch(`${BASE_URL}${Key}&language=${Config.language}&page=${Config.page}`).then(response => {\n//       if (response.ok) {\n//         return response.json();\n//       }\n//       return Promise.reject(new Error(`Films not found `));\n//     });\n//   }\n\nasync function fetcMovies() {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const response = await fetch(url, config);\n  return response.ok ? await response.json() : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchHomeMovies() {\n  return fetchWithErrorHandling(`${BASE_URL}/authors?_embed=books`);\n}\nexport function fetchBooks() {\n  return fetchWithErrorHandling(`${BASE_URL}/books`);\n}\nexport function fetchBookById(bookId) {\n  return fetchWithErrorHandling(`${BASE_URL}/books/${bookId}?_expand=author`);\n}","map":{"version":3,"sources":["F:/goit-react-hw-04-movies/src/servises/MovieAPI.js"],"names":["BASE_URL","Key","Config","language","page","fetcMovies","url","config","response","fetch","ok","json","Promise","reject","Error","fetchHomeMovies","fetchWithErrorHandling","fetchBooks","fetchBookById","bookId"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,sDAAjB;AACA,MAAMC,GAAG,GAAG,kCAAZ;AACA,MAAMC,MAAM,GAAE;AACVC,EAAAA,QAAQ,EAAE,OADA;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAd,C,CAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGA,eAAeC,UAAf,GAAiD;AAAA,MAAvBC,GAAuB,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AAC/C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAMC,MAAN,CAA5B;AACA,SAAOC,QAAQ,CAACE,EAAT,GACH,MAAMF,QAAQ,CAACG,IAAT,EADH,GAEHC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,WAAV,CAAf,CAFJ;AAGD;;AAED,OAAO,SAASC,eAAT,GAA2B;AAChC,SAAOC,sBAAsB,CAAE,GAAEhB,QAAS,uBAAb,CAA7B;AACD;AAED,OAAO,SAASiB,UAAT,GAAsB;AAC3B,SAAOD,sBAAsB,CAAE,GAAEhB,QAAS,QAAb,CAA7B;AACD;AAED,OAAO,SAASkB,aAAT,CAAuBC,MAAvB,EAA+B;AACpC,SAAOH,sBAAsB,CAAE,GAAEhB,QAAS,UAASmB,MAAO,iBAA7B,CAA7B;AACD","sourcesContent":["// const BASE_URL = ' https://api.themoviedb.org/3/movie/550?api_key=';\r\nconst BASE_URL = ' https://api.themoviedb.org/3/movie/popular?api_key=';\r\nconst Key = 'e7d10f6c3b01c863e408d25d6d0fc59c'\r\nconst Config ={\r\n    language: 'en-US',\r\n    page: 1\r\n}\r\n\r\n// function fetcMovies() {\r\n//     return fetch(`${BASE_URL}${Key}&language=${Config.language}&page=${Config.page}`).then(response => {\r\n//       if (response.ok) {\r\n//         return response.json();\r\n//       }\r\n  \r\n//       return Promise.reject(new Error(`Films not found `));\r\n//     });\r\n//   }\r\n  \r\n\r\nasync function fetcMovies(url = '', config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nexport function fetchHomeMovies() {\r\n  return fetchWithErrorHandling(`${BASE_URL}/authors?_embed=books`);\r\n}\r\n\r\nexport function fetchBooks() {\r\n  return fetchWithErrorHandling(`${BASE_URL}/books`);\r\n}\r\n\r\nexport function fetchBookById(bookId) {\r\n  return fetchWithErrorHandling(`${BASE_URL}/books/${bookId}?_expand=author`);\r\n}"]},"metadata":{},"sourceType":"module"}